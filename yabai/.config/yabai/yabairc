#!/usr/bin/env zsh
# NOTE: This file should be executable.

# See: https://github.com/koekeishiya/yabai/wiki/Installing-yabai-(latest-release)
yabai -m signal --add event=dock_did_restart action="sudo yabai --load-sa"
sudo yabai --load-sa


# =============================================
# ======== Configuration
# =============================================
config=(
  # -----------------------------------
  # -------- Space
  # -----------------------------------
  # values: `bsp` | `float` | `stack`
  layout stack

  top_padding 8
  bottom_padding 8
  left_padding 8
  right_padding 8
  window_gap 8

  auto_balance off
  # If auto_balance is disabled, the split_ratio defines the old window's ratio
  split_ratio 0.5
  split_type auto


  # -----------------------------------
  # -------- Mouse
  # -----------------------------------
  mouse_modifier fn
  # set modifier + left-click drag to move window
  mouse_action1 move
  # set modifier + right-click drag to resize window
  mouse_action2 resize
  # values: `swap` | `stack`
  mouse_drop_action swap

  focus_follows_mouse off
  mouse_follows_focus off

  debug_output off
  external_bar all:32:0


  # -----------------------------------
  # -------- Window
  # -----------------------------------
  window_origin_display default
  window_zoom_persist on
  window_shadow float

  # values: `first_child` | `second_child`
  # first_child  : new window to the left or top
  # second_child : new window to the right or bottom
  window_placement second_child

  window_opacity off
  window_opacity_duration 0.0
  active_window_opacity 1.0
  normal_window_opacity 0.9

  # window_animation_duration 0.1
  # window_animation_easing ease_out_cubic

  insert_feedback_color 0xFFD75F5F
)

yabai -m config "${config[@]}"



# =============================================
# ======== Rule
# =============================================
# -----------------------------------
# -------- Utils
# -----------------------------------
function create_regex_string() {
  local array=("$@") regex_string=""
  for element in "${array[@]}"; do regex_string+="^${element}$|"; done
  regex_string="${regex_string%|}"
  echo $regex_string
}


# -----------------------------------
# -------- Fields
# -----------------------------------
white_list_array=(
  kitty Code Obsidian Neovide
  Safari Arc 'Google Chrome'
  'Microsoft Word'
)
white_list=$(create_regex_string "${white_list_array[@]}")


extra_list_array=(
  Finder Mail
  Music Spotify
  QQ WeChat Discord 'Telegram Lite'
)
extra_list=$(create_regex_string "${extra_list_array[@]}")


# -----------------------------------
# -------- Apply Rule
# -----------------------------------
yabai -m rule --add app!="$white_list" manage=off
# Disable in Little Arc
yabai -m rule --add app="^Arc$" title="^Space.*$" manage=off
# Disable in Arc Preference
yabai -m rule --add app="^Arc$" title="^Fau$" manage=off
# Disable in Safari Preference (maybe `can-resize` is another way to do this)
yabai -m rule --add app="^Safari$" title="General|Tabs|AutoFill|Passwords|Search|Security|Privacy|Websites|Profiles|Extensions|Advanced|Developer|Feature Flags" manage=off
# NOTE: Restore to the old version behavior (< 0.7)
yabai -m rule --apply



# =============================================
# ======== Signal
# =============================================
# Refocus window when window is destroyed
yabai -m signal --add event=window_destroyed action="$HOME/.config/yabai/destroy_space_if_no_window.sh"
# NOTE: Since some apps will hide their windows when closed, the window focus will be on Finder.
# \     So an `application_hidden` event is added to handle this situation.
yabai -m signal --add event=window_destroyed action="$HOME/.config/yabai/refocus_window.sh '$white_list|$extra_list'"
yabai -m signal --add event=application_hidden action="$HOME/.config/yabai/refocus_window.sh 'Finder'"

# Sketchybar
yabai -m signal --add event=window_created      action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_window_created"
# yabai -m signal --add event=window_destroyed    action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_window_destroyed"
yabai -m signal --add event=window_focused      action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_window_focused"
yabai -m signal --add event=window_resized      action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_window_resized"
yabai -m signal --add event=window_moved        action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_window_moved"
yabai -m signal --add event=application_visible action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_application_visible"
# yabai -m signal --add event=space_changed       action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_space_changed"
# yabai -m signal --add event=application_hidden  action="command -v sketchybar &> /dev/null && sketchybar --trigger yabai_application_hidden"


# =============================================
# ======== Border
# =============================================
# brew tap FelixKratz/formulae && brew install borders
borders_black_list_array=(
  CleanMyMac X
  ChatGPT
  GrabIt
  HSTracker
  Screen Studio
)
borders_black_list=$(IFS=,; echo "${borders_black_list_array[*]}")

borders active_color=0xFF9999FF inactive_color=0xFF494D64 width=5.5 blacklist="$borders_black_list" &



# =============================================
# ======== END
# =============================================
command -v sketchybar &> /dev/null && sketchybar --trigger yabai_loaded
echo "yabai configuration loaded.."
